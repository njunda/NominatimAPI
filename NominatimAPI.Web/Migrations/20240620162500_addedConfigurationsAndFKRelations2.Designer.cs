// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nominatim.Clients.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NominatimAPI.Web.Migrations
{
    [DbContext(typeof(NominatimDbContext))]
    [Migration("20240620162500_addedConfigurationsAndFKRelations2")]
    partial class addedConfigurationsAndFKRelations2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Nominatim.Clients.Models.Entity.Query.QuerySearchModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("QuerySearchModels");
                });

            modelBuilder.Entity("Nominatim.Clients.Models.Entity.QueryResponse.QueryResponseEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Addresstype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<List<string>>("Boundingbox")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Importance")
                        .HasColumnType("double precision");

                    b.Property<string>("Lat")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Licence")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("OsmId")
                        .HasColumnType("bigint");

                    b.Property<string>("OsmType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlaceId")
                        .HasColumnType("integer");

                    b.Property<int>("PlaceRank")
                        .HasColumnType("integer");

                    b.Property<Guid>("ResponseEntityModelId")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ResponseEntityModelId");

                    b.ToTable("QueryResponseEntityModels");
                });

            modelBuilder.Entity("Nominatim.Clients.Models.Entity.Reponse.ResponseEntityModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text");

                    b.Property<Guid>("QuerySearchModelId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("QuerySearchModelId")
                        .IsUnique();

                    b.ToTable("ResponseEntityModels");
                });

            modelBuilder.Entity("Nominatim.Clients.Models.Entity.QueryResponse.QueryResponseEntityModel", b =>
                {
                    b.HasOne("Nominatim.Clients.Models.Entity.Reponse.ResponseEntityModel", "ResponseEntity")
                        .WithMany("QueryResponseEntityModels")
                        .HasForeignKey("ResponseEntityModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResponseEntity");
                });

            modelBuilder.Entity("Nominatim.Clients.Models.Entity.Reponse.ResponseEntityModel", b =>
                {
                    b.HasOne("Nominatim.Clients.Models.Entity.Query.QuerySearchModel", "QuerySearchModel")
                        .WithOne("ResponseEntityModel")
                        .HasForeignKey("Nominatim.Clients.Models.Entity.Reponse.ResponseEntityModel", "QuerySearchModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuerySearchModel");
                });

            modelBuilder.Entity("Nominatim.Clients.Models.Entity.Query.QuerySearchModel", b =>
                {
                    b.Navigation("ResponseEntityModel");
                });

            modelBuilder.Entity("Nominatim.Clients.Models.Entity.Reponse.ResponseEntityModel", b =>
                {
                    b.Navigation("QueryResponseEntityModels");
                });
#pragma warning restore 612, 618
        }
    }
}
